#!/usr/bin/perl

$0 = "xmonmd";

use strict;
use Parallel::ForkManager;
use DBI;
use IPC::Cmd qw( run );

#init configuration
open(CF, "</var/xmon/install_dir")
	or die "Can't open /var/xmon/install_dir\n";
my $install_dir=<CF>;
chomp($install_dir);
close(CF);
my %cnf = ();
open(C, "<$install_dir/etc/xmon.conf")
        or die "Cant open config $install_dir/etc/xmon.conf\n";
while(<C>) {
        chomp;
        if ($_ !~ /^#/ and $_ ne '') {
                my @cp = split(" = ", $_);
                $cnf{$cp[0]} = $cp[1];
        }
}
close(C);

#open logfile
open(L, ">>$install_dir/log/xmonmd.log")
        or die "Cant open $install_dir/log/xmonmd.log\n";

#set forks number
my $pm = new Parallel::ForkManager($cnf{xmoncd_max_parallel_procs});

my $t = localtime;
print L "$t Initializing.\n";

#connect to database for taking tasks
my $dbh = DBI->connect("DBI:mysql:database=$cnf{db_name};host=$cnf{db_host};port=$cnf{db_port}", $cnf{db_user}, $cnf{db_pass});

#select all tasks
my @tasks = ();
my $sth = $dbh->prepare("	
				SELECT id, check_name, check_interval,check_script_name, check_script_timeout 
					FROM check_conf
						WHERE check_managed=1
");
$sth->execute();
while (my $ref = $sth->fetchrow_hashref()) {
	push(@tasks, "$ref->{id}\:\:\:\:\:$ref->{check_interval}\:\:\:\:\:$ref->{check_script_name}\:\:\:\:\:$ref->{check_script_timeout}");
}
$sth->finish();

#select all task params
my @tasks_parameters = ();
foreach (@tasks) {
	chomp;
	
	my @task_string = split("\:\:\:\:\:", $_);	

	my $sth = $dbh->prepare("       
        	                        SELECT id, field_name, field_value 
                	                        FROM checks_params
                        	                        WHERE id=\'$task_string[0]\'
								AND type=\'check\'
	");
	$sth->execute();
	while (my $ref = $sth->fetchrow_hashref()) {
        	push(@tasks_parameters, "$ref->{id}\:\:\:\:\:$ref->{field_name}\:\:\:\:\:$ref->{field_value}");
	}
	$sth->finish();
}

#deleting all invalid data from descriptions table
$dbh->do("
		DELETE FROM checks_descriptions
			WHERE id NOT IN (
						SELECT id 
							FROM check_conf
					)
");

#deleting all invalid data from descriptions table
$dbh->do("
                DELETE FROM checks_descriptions
                        WHERE id NOT IN (
                                                SELECT id 
                                                        FROM check_conf
                                        )
");

#disconnect from database
$dbh->disconnect();

#lets start
while () {
	foreach (@tasks) {
		chomp;

		#split each task row on params
                my @task_param = split("\:\:\:\:\:", $_);

		#taking script params for current task
		my $params = '';
		foreach (@tasks_parameters) {
			chomp;
	
			my @tasks_parameters_string = split("\:\:\:\:\:", $_);
			
			if ($tasks_parameters_string[0] eq $task_param[0]) {
				$params = $params . "\-\-$tasks_parameters_string[1]\=\'$tasks_parameters_string[2]\' ";
			}
		}
		$params =~ s/ $//;

		#select last check time for check
		my $dbh = DBI->connect("DBI:mysql:database=$cnf{db_name};host=$cnf{db_host};port=$cnf{db_port}", $cnf{db_user}, $cnf{db_pass});

		my $last_check_time = 0;
		my $sth = $dbh->prepare("       
	                                        SELECT current_check_time
							FROM checks_status
								WHERE id=$task_param[0]
        	");
        	$sth->execute();
       		while (my $ref = $sth->fetchrow_hashref()) {
                	$last_check_time = $ref->{'current_check_time'};
        	}
	        $sth->finish();

		$dbh->disconnect();

		#check can we run this task and have we script
		my $now = time;
		if ($last_check_time + $task_param[1] < $now and -f "$cnf{xmoncd_check_scripts_dir}/$task_param[2]") {
	                #fork it
	                my $pid = $pm->start and next;
	                $0 = "xmonmd: $task_param[0]";

			my $t = localtime;
			print L "$t We are ready to execute check with ID: $task_param[0] INTERVAL: $task_param[1] EXECUTION COMMAND: $cnf{xmoncd_check_scripts_dir}/$task_param[2] $params TIMEOUT: $task_param[3]\n";

			#take current time
                        my $current_check_time = time;

			#if true and script is here run it
			my $cmd = "$cnf{xmoncd_check_scripts_dir}/$task_param[2] $params";
			my(
                                $success,
                                $error_message,
                                $full_buf,
                                $stdout_buf,
                                $stderr_buf
                        ) = run(
                                command => $cmd,
                                timeout => $task_param[3],
                                verbose => 0
                        );

                        my $out = '';
                        foreach (@$stdout_buf) {
                                s/\n/ /g;
				$out = $out . $_;
                        }
                        my $err = '';
                        foreach (@$stderr_buf) {
                                s/\n/ /g;
				$err = $err . $_;
                        }

			my $severity = '';
			my $data = '';

			#close process if script return bad format or didn't return anything
			if ($out eq '' or $err eq '') {
				$severity = '10';
				$data = "Script $task_param[2] returned incorrect result";
			}
			else {
				$severity = $out;
				$data = $err;
			}

			#after all update statuses and log tables
			my $dbh = DBI->connect("DBI:mysql:database=$cnf{db_name};host=$cnf{db_host};port=$cnf{db_port}", $cnf{db_user}, $cnf{db_pass});

			my $row_count = '';
	                my $sth = $dbh->prepare("       
        	                                        SELECT id
                	                                        FROM checks_status
									WHERE id=$task_param[0]
	                ");
        	        $sth->execute();
                	while (my $ref = $sth->fetchrow_arrayref()) {
                        	$row_count = $ref->[0];
	                }
        	        $sth->finish();

			if ($row_count eq '') {
				$dbh->do("
                                	        INSERT INTO checks_status (id, current_severity, current_data, current_check_time)
                                        	        VALUES(\'$task_param[0]\',\'$severity\',\'$data\',\'$current_check_time\')
                        	");
			}
			else {
	                        $dbh->do("
        	                		UPDATE checks_status
                	                        	SET current_severity=\'$severity\', current_data=\'$data\', current_check_time=\'$current_check_time\'
								WHERE id=$task_param[0]
                        	");
			}

                        $dbh->do("
                        		INSERT INTO checks_log (id, data, time, type)
                                        	VALUES(\'$task_param[0]\',\'$out\',\'$current_check_time\', \'check\')
                        ");

			$dbh->disconnect();

			my $t = localtime;
			print L "$t Check $task_param[0] was executed and give results SEVERITY: $severity DATA: $data TIME: $current_check_time\n";
		}

		$pm->finish;
	}
		
	$pm->wait_all_children;

	sleep $cnf{xmoncd_sleep_interval};	
}

close(L);

